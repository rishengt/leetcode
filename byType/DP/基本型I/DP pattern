给出一个序列（数组/字符串），其中每一个元素可以认为是"一天"，并且"今天"的状态只取决于"昨天"的状态。
    House Robber
    Best Time to Buy and Sell Stocks
    .......

套路：
    定义dp[i][j]: 表示第i-th轮的第j种状态（j = 1，2，。。。）
    千方百计将dp[i][j]与前一轮的状态dp[i-1][j]产生关系(j = 1,2,...K)
    最终的结果是dp[last][j]中的某种aggregation(sum,max,min)

To Do or Not to Do
    很多不是那么套路的DP题，DP状态可能比较难设计。不过还是有套路可循。
    某些题目给你一次"行使某种策略的权力"。联想到买卖股票系列的题，我们通常会设计两个状态就是"行驶了权力"和"没有行驶权力"分别对应的价值